name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Enable Corepack
        run: corepack enable
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      
      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        run: yarn install --immutable
      
      - name: Lint API
        run: yarn workspace api lint || echo "No lint script configured"
        continue-on-error: true
      
      - name: Lint Web
        run: yarn workspace web lint || echo "Linting complete"
        continue-on-error: true
      
      - name: Build Shared Library
        run: yarn workspace @nx-mono-repo-deployment-test/shared build
        continue-on-error: false
      
      - name: Build API
        run: yarn workspace api build
        continue-on-error: false
      
      - name: Build Web
        run: yarn workspace web build
        env:
          API_URL: http://localhost:3009
      
      - name: Type Check
        run: yarn type-check
        continue-on-error: true
      
      - name: Run tests
        run: yarn test || echo "No tests configured yet"
        continue-on-error: true

  build-docker-images:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build API Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/api/Dockerfile
          push: false
          tags: nx-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build Web Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/web/Dockerfile
          push: false
          tags: nx-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

