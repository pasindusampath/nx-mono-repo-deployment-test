name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      
      - name: Enable Corepack
        run: corepack enable
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      
      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        run: yarn install --immutable
      
      - name: Check formatting
        run: yarn prettier --check "**/*.{js,jsx,ts,tsx,json,css,md}" || echo "Formatting check complete"
        continue-on-error: true
      
      - name: Lint code
        run: |
          yarn workspace api lint || echo "API lint complete"
          yarn workspace web lint || echo "Web lint complete"
        continue-on-error: true
      
      - name: Build Shared Library
        run: yarn workspace @nx-mono-repo-deployment-test/shared build
        continue-on-error: false
      
      - name: Build applications
        run: |
          yarn workspace api build
          yarn workspace web build
        env:
          API_URL: http://localhost:3000
      
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… PR validation passed! Ready for review.'
            })

